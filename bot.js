require('dotenv').config();
const {Telegraf} = require('telegraf');
const CovidAPI = require('covid19-api');
const Markup = require('telegraf/markup');
const COUNTRIES_LIST = require('./consts');
const countryArr = COUNTRIES_LIST.split(', ');

// const bot = new Telegraf(process.env.BOT_TOKEN);
const bot = new Telegraf('1451917654:AAFRZafd8_tW1Y-duwJPaE9DYqaQRTSsWyo');
bot.start((ctx) => {
    ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${ctx.message.from.first_name}! 
–≠—Ç–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ—Ä–æ–Ω–æ–≤–∏—Ä—É—Å—É.
–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ –Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω - /help`
    //     Markup.keyboard([
    //     ['US', 'Russia'],
    //     ['Ukraine', 'Israel']
    // ]).resize().extra()
    )
});
bot.help((ctx) => ctx.reply(COUNTRIES_LIST));
bot.on('sticker', (ctx) => ctx.reply('üëç'));

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å—Ç—Ä–∞–Ω–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
bot.on('text', (ctx) => {
    let data = {};
    data = CovidAPI.getReportsByCountries(ctx.message.text)
        .then(data => {
            let formatData = `
            –°—Ç—Ä–∞–Ω–∞: ${data[0][0].country},
—Å–ª—É—á–∞–µ–≤: ${data[0][0].cases},
—Å–º–µ—Ä—Ç–µ–π: ${data[0][0].deaths},
–≤—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: ${data[0][0].recovered}`;
            let chosenCountries = getRandomCountries(4);
            ctx.reply(formatData, Markup.keyboard([
                [chosenCountries[0], chosenCountries[1]],
                [chosenCountries[2], chosenCountries[3]]
            ]).resize().extra());
        })
        .catch(error => {
            ctx.reply('–ù–µ—Ç —Ç–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ /help');
        })
});

/**
 * –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–∞–Ω–µ –ø–æ —Ç–∞–π–º–µ—Ä—É
 */
let intIdx;
// bot.on('text', (ctx) => {
//     if (intIdx) clearInterval(intIdx);
//     intIdx = setInterval(() => {
//         let data = {};
//         let countryArr = COUNTRIES_LIST.split(', ');
//         let chosenCountry = choseCountry(countryArr);
//         data = CovidAPI.getReportsByCountries(chosenCountry)
//             .then(data => {
//                 let formatData = `
//             –°—Ç—Ä–∞–Ω–∞: ${data[0][0].country},
// —Å–ª—É—á–∞–µ–≤: ${data[0][0].cases},
// —Å–º–µ—Ä—Ç–µ–π: ${data[0][0].deaths},
// –≤—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: ${data[0][0].recovered}`;
//                 ctx.reply(formatData);
//             })
//             .catch(error => {
//                 ctx.reply('–ù–µ—Ç —Ç–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ /help');
//             })
//     }, 2000);
// });
bot.launch();

/**
 * –º–µ—Ç–æ–¥ –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
 * @param countryArr - –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∞–Ω
 * @returns –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞
 */
function choseCountry(countryArr) {

    const randNum = Math.floor(Math.random()*countryArr.length);

    return countryArr[randNum];
}

function getRandomCountries(amount) {
    let chosenCountryArr = [];
    for (let i = 0; i < amount; i++) {
        let countryName = choseCountry(countryArr);
        countryName = countryName[0].toUpperCase() + countryName.slice(1,);
        chosenCountryArr.push(countryName);
    }
    return chosenCountryArr;
}
